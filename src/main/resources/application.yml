project:
  version: 0.1
  description: Notification Service

error:
  handling:
    enabled: true

info:
  version: 0.0.1

spring:
  application:
    name: messaging-api

  data:
    rest:
      detection-strategy: annotated

  jackson:
    serialization:
      fail-on-empty-beans: false
      write-dates-as-timestamps: false
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat

  kafka:
    properties:
      security.protocol: "PLAINTEXT"
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: messaging_api
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      missing-topics-fatal: false
      ack-mode: MANUAL_IMMEDIATE

  mail:
    #    host: smtp.gmail.com
    #    port: 587
    #    username: kgigo.test@gmail.com
    #    password: P@ssw0rd1234
    #    properties:
    #      mail.smtp.auth: true`
    #      mail.smtp.starttls.enable: true
    addresses:
      from: ${SUBSCRIPTION_FROM_ADDRESS:from_address}
      replyTo: ${SUBSCRIPTION_REPLYTO_ADDRESS":to_address}

  thymeleaf:
    check-template-location: true
    prefix: "classpath:/templates/"
    suffix: .html
    mode: HTML5
    encoding: UTF-8

server:
  error.whitelabel.enabled: false
  servlet:
    session:
      timeout: 30h
      cookie:
        http-only: false
        secure: false
    context-path: /api/notification

kafka:
  enabled: true
  topics:
    email-queue: ${EMAIL_QUEUE_NAME}
    sms-queue: ${SMS_QUEUE_NAME}

test:
  subscription:
    recipient: ${SUBSCRIPTION_RECIPIENT:c}
    subject: ${SUBSCRIPTION_EMAIL_SUBJECT:mailSubject}
  loanApplication:
    recipient: ${LOAN_APPLICATION_RECIPIENT:loanRECIPIENT}
    subject: ${LOAN_APPLICATION_SUBJECT:loansub}
    downloadUrl: ${LOAN_APPLICATION_DOWNLOAD_URL:loanUrl}
  contactUs:
    recipient: ${CONTACTUS_RECIPIENT:contactus}
    subject: ${CONTACTUS_EMAIL_SUBJECT:contactus}
  crmNotification:
    from: ${CRM_NOTIFICATION_FROM_ADDRESS:appservice@test.com.hk}
    replyTo: ${CRM_NOTIFICATION_REPLYTO_ADDRESS:appservice@test.com.hk}
    subject: ${CRM_NOTIFICATION_SUBJECT:(SIT) [Test - CRM]}
    loanInformationPage: ${CRM_NOTIFICATION_LOAN_INFORMATION_PAGE:https://backoffice-sit.test.com.hk/loan/information/}
  vault:
    url: ${VAULT_URL:https://vault.sitapp.test.local/v1/totp}
    token: ${VAULT_TOKEN:s.EKAOOrpe5eceqQZoP3yrS1YW}
  # sms-send-url: ${SMS_URL:https://httpsmsak.smartone.com/appprod/servlet/nGenSendSM}
  # smsAccount: ${SMS_ACCOUNT:topvast}
  # smsPassword: ${SMS_PASSWORD:6WpntwXL6YV9CWCS}
  # smsSuffix: ${SMS_SUFFIX:0}
  # smsReqSmsStatus: ${SMS_RSS:y}
  # smsXmlResp: ${SMS_XML_RESP:y}
  environment: ${ENVIRONMENT}
